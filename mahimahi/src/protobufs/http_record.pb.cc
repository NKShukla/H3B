// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: http_record.proto

#include "http_record.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_http_5frecord_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_http_5frecord_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HTTPHeader;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_http_5frecord_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HTTPMessage;
}  // namespace protobuf_http_5frecord_2eproto
namespace MahimahiProtobufs {
class HTTPMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HTTPMessage>
      _instance;
} _HTTPMessage_default_instance_;
class HTTPHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HTTPHeader>
      _instance;
} _HTTPHeader_default_instance_;
class RequestResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestResponse>
      _instance;
} _RequestResponse_default_instance_;
}  // namespace MahimahiProtobufs
namespace protobuf_http_5frecord_2eproto {
static void InitDefaultsHTTPMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MahimahiProtobufs::_HTTPMessage_default_instance_;
    new (ptr) ::MahimahiProtobufs::HTTPMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MahimahiProtobufs::HTTPMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HTTPMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHTTPMessage}, {
      &protobuf_http_5frecord_2eproto::scc_info_HTTPHeader.base,}};

static void InitDefaultsHTTPHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MahimahiProtobufs::_HTTPHeader_default_instance_;
    new (ptr) ::MahimahiProtobufs::HTTPHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MahimahiProtobufs::HTTPHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HTTPHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHTTPHeader}, {}};

static void InitDefaultsRequestResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MahimahiProtobufs::_RequestResponse_default_instance_;
    new (ptr) ::MahimahiProtobufs::RequestResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MahimahiProtobufs::RequestResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RequestResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRequestResponse}, {
      &protobuf_http_5frecord_2eproto::scc_info_HTTPMessage.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_HTTPMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HTTPHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RequestResponse.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MahimahiProtobufs::HTTPMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MahimahiProtobufs::HTTPMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MahimahiProtobufs::HTTPMessage, first_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MahimahiProtobufs::HTTPMessage, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MahimahiProtobufs::HTTPMessage, body_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MahimahiProtobufs::HTTPHeader, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MahimahiProtobufs::HTTPHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MahimahiProtobufs::HTTPHeader, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MahimahiProtobufs::HTTPHeader, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MahimahiProtobufs::RequestResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MahimahiProtobufs::RequestResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MahimahiProtobufs::RequestResponse, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MahimahiProtobufs::RequestResponse, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MahimahiProtobufs::RequestResponse, scheme_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MahimahiProtobufs::RequestResponse, request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MahimahiProtobufs::RequestResponse, response_),
  0,
  3,
  4,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::MahimahiProtobufs::HTTPMessage)},
  { 11, 18, sizeof(::MahimahiProtobufs::HTTPHeader)},
  { 20, 30, sizeof(::MahimahiProtobufs::RequestResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::MahimahiProtobufs::_HTTPMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MahimahiProtobufs::_HTTPHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::MahimahiProtobufs::_RequestResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "http_record.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021http_record.proto\022\021MahimahiProtobufs\"^"
      "\n\013HTTPMessage\022\022\n\nfirst_line\030\001 \001(\014\022-\n\006hea"
      "der\030\002 \003(\0132\035.MahimahiProtobufs.HTTPHeader"
      "\022\014\n\004body\030\003 \001(\014\"(\n\nHTTPHeader\022\013\n\003key\030\001 \001("
      "\014\022\r\n\005value\030\002 \001(\014\"\350\001\n\017RequestResponse\022\n\n\002"
      "ip\030\001 \001(\t\022\014\n\004port\030\002 \001(\r\0229\n\006scheme\030\003 \001(\0162)"
      ".MahimahiProtobufs.RequestResponse.Schem"
      "e\022/\n\007request\030\004 \001(\0132\036.MahimahiProtobufs.H"
      "TTPMessage\0220\n\010response\030\005 \001(\0132\036.MahimahiP"
      "rotobufs.HTTPMessage\"\035\n\006Scheme\022\010\n\004HTTP\020\001"
      "\022\t\n\005HTTPS\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 411);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "http_record.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_http_5frecord_2eproto
namespace MahimahiProtobufs {
const ::google::protobuf::EnumDescriptor* RequestResponse_Scheme_descriptor() {
  protobuf_http_5frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_http_5frecord_2eproto::file_level_enum_descriptors[0];
}
bool RequestResponse_Scheme_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RequestResponse_Scheme RequestResponse::HTTP;
const RequestResponse_Scheme RequestResponse::HTTPS;
const RequestResponse_Scheme RequestResponse::Scheme_MIN;
const RequestResponse_Scheme RequestResponse::Scheme_MAX;
const int RequestResponse::Scheme_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void HTTPMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HTTPMessage::kFirstLineFieldNumber;
const int HTTPMessage::kHeaderFieldNumber;
const int HTTPMessage::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HTTPMessage::HTTPMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_http_5frecord_2eproto::scc_info_HTTPMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MahimahiProtobufs.HTTPMessage)
}
HTTPMessage::HTTPMessage(const HTTPMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      header_(from.header_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  first_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_first_line()) {
    first_line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.first_line_);
  }
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_body()) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  // @@protoc_insertion_point(copy_constructor:MahimahiProtobufs.HTTPMessage)
}

void HTTPMessage::SharedCtor() {
  first_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HTTPMessage::~HTTPMessage() {
  // @@protoc_insertion_point(destructor:MahimahiProtobufs.HTTPMessage)
  SharedDtor();
}

void HTTPMessage::SharedDtor() {
  first_line_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HTTPMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HTTPMessage::descriptor() {
  ::protobuf_http_5frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_http_5frecord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HTTPMessage& HTTPMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_http_5frecord_2eproto::scc_info_HTTPMessage.base);
  return *internal_default_instance();
}


void HTTPMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MahimahiProtobufs.HTTPMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  header_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      first_line_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      body_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HTTPMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MahimahiProtobufs.HTTPMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes first_line = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_first_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MahimahiProtobufs.HTTPHeader header = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes body = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MahimahiProtobufs.HTTPMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MahimahiProtobufs.HTTPMessage)
  return false;
#undef DO_
}

void HTTPMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MahimahiProtobufs.HTTPMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes first_line = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->first_line(), output);
  }

  // repeated .MahimahiProtobufs.HTTPHeader header = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->header_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->header(static_cast<int>(i)),
      output);
  }

  // optional bytes body = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->body(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MahimahiProtobufs.HTTPMessage)
}

::google::protobuf::uint8* HTTPMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MahimahiProtobufs.HTTPMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes first_line = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->first_line(), target);
  }

  // repeated .MahimahiProtobufs.HTTPHeader header = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->header_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->header(static_cast<int>(i)), deterministic, target);
  }

  // optional bytes body = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->body(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MahimahiProtobufs.HTTPMessage)
  return target;
}

size_t HTTPMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MahimahiProtobufs.HTTPMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .MahimahiProtobufs.HTTPHeader header = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->header_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->header(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes first_line = 1;
    if (has_first_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->first_line());
    }

    // optional bytes body = 3;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->body());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HTTPMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MahimahiProtobufs.HTTPMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const HTTPMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HTTPMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MahimahiProtobufs.HTTPMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MahimahiProtobufs.HTTPMessage)
    MergeFrom(*source);
  }
}

void HTTPMessage::MergeFrom(const HTTPMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MahimahiProtobufs.HTTPMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  header_.MergeFrom(from.header_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_first_line();
      first_line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.first_line_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_body();
      body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
    }
  }
}

void HTTPMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MahimahiProtobufs.HTTPMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HTTPMessage::CopyFrom(const HTTPMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MahimahiProtobufs.HTTPMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HTTPMessage::IsInitialized() const {
  return true;
}

void HTTPMessage::Swap(HTTPMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HTTPMessage::InternalSwap(HTTPMessage* other) {
  using std::swap;
  CastToBase(&header_)->InternalSwap(CastToBase(&other->header_));
  first_line_.Swap(&other->first_line_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  body_.Swap(&other->body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HTTPMessage::GetMetadata() const {
  protobuf_http_5frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_http_5frecord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HTTPHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HTTPHeader::kKeyFieldNumber;
const int HTTPHeader::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HTTPHeader::HTTPHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_http_5frecord_2eproto::scc_info_HTTPHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MahimahiProtobufs.HTTPHeader)
}
HTTPHeader::HTTPHeader(const HTTPHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:MahimahiProtobufs.HTTPHeader)
}

void HTTPHeader::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HTTPHeader::~HTTPHeader() {
  // @@protoc_insertion_point(destructor:MahimahiProtobufs.HTTPHeader)
  SharedDtor();
}

void HTTPHeader::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HTTPHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HTTPHeader::descriptor() {
  ::protobuf_http_5frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_http_5frecord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HTTPHeader& HTTPHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_http_5frecord_2eproto::scc_info_HTTPHeader.base);
  return *internal_default_instance();
}


void HTTPHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:MahimahiProtobufs.HTTPHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HTTPHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MahimahiProtobufs.HTTPHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MahimahiProtobufs.HTTPHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MahimahiProtobufs.HTTPHeader)
  return false;
#undef DO_
}

void HTTPHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MahimahiProtobufs.HTTPHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MahimahiProtobufs.HTTPHeader)
}

::google::protobuf::uint8* HTTPHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MahimahiProtobufs.HTTPHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MahimahiProtobufs.HTTPHeader)
  return target;
}

size_t HTTPHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MahimahiProtobufs.HTTPHeader)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key());
    }

    // optional bytes value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HTTPHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MahimahiProtobufs.HTTPHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const HTTPHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HTTPHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MahimahiProtobufs.HTTPHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MahimahiProtobufs.HTTPHeader)
    MergeFrom(*source);
  }
}

void HTTPHeader::MergeFrom(const HTTPHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MahimahiProtobufs.HTTPHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void HTTPHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MahimahiProtobufs.HTTPHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HTTPHeader::CopyFrom(const HTTPHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MahimahiProtobufs.HTTPHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HTTPHeader::IsInitialized() const {
  return true;
}

void HTTPHeader::Swap(HTTPHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HTTPHeader::InternalSwap(HTTPHeader* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HTTPHeader::GetMetadata() const {
  protobuf_http_5frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_http_5frecord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RequestResponse::InitAsDefaultInstance() {
  ::MahimahiProtobufs::_RequestResponse_default_instance_._instance.get_mutable()->request_ = const_cast< ::MahimahiProtobufs::HTTPMessage*>(
      ::MahimahiProtobufs::HTTPMessage::internal_default_instance());
  ::MahimahiProtobufs::_RequestResponse_default_instance_._instance.get_mutable()->response_ = const_cast< ::MahimahiProtobufs::HTTPMessage*>(
      ::MahimahiProtobufs::HTTPMessage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestResponse::kIpFieldNumber;
const int RequestResponse::kPortFieldNumber;
const int RequestResponse::kSchemeFieldNumber;
const int RequestResponse::kRequestFieldNumber;
const int RequestResponse::kResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestResponse::RequestResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_http_5frecord_2eproto::scc_info_RequestResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MahimahiProtobufs.RequestResponse)
}
RequestResponse::RequestResponse(const RequestResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.has_request()) {
    request_ = new ::MahimahiProtobufs::HTTPMessage(*from.request_);
  } else {
    request_ = NULL;
  }
  if (from.has_response()) {
    response_ = new ::MahimahiProtobufs::HTTPMessage(*from.response_);
  } else {
    response_ = NULL;
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&scheme_) -
    reinterpret_cast<char*>(&port_)) + sizeof(scheme_));
  // @@protoc_insertion_point(copy_constructor:MahimahiProtobufs.RequestResponse)
}

void RequestResponse::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&request_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&request_)) + sizeof(port_));
  scheme_ = 1;
}

RequestResponse::~RequestResponse() {
  // @@protoc_insertion_point(destructor:MahimahiProtobufs.RequestResponse)
  SharedDtor();
}

void RequestResponse::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete request_;
  if (this != internal_default_instance()) delete response_;
}

void RequestResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RequestResponse::descriptor() {
  ::protobuf_http_5frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_http_5frecord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestResponse& RequestResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_http_5frecord_2eproto::scc_info_RequestResponse.base);
  return *internal_default_instance();
}


void RequestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MahimahiProtobufs.RequestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      ip_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(request_ != NULL);
      request_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(response_ != NULL);
      response_->Clear();
    }
  }
  if (cached_has_bits & 24u) {
    port_ = 0u;
    scheme_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RequestResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MahimahiProtobufs.RequestResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MahimahiProtobufs.RequestResponse.ip");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MahimahiProtobufs.RequestResponse.Scheme scheme = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MahimahiProtobufs::RequestResponse_Scheme_IsValid(value)) {
            set_scheme(static_cast< ::MahimahiProtobufs::RequestResponse_Scheme >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MahimahiProtobufs.HTTPMessage request = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MahimahiProtobufs.HTTPMessage response = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MahimahiProtobufs.RequestResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MahimahiProtobufs.RequestResponse)
  return false;
#undef DO_
}

void RequestResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MahimahiProtobufs.RequestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MahimahiProtobufs.RequestResponse.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip(), output);
  }

  // optional uint32 port = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->port(), output);
  }

  // optional .MahimahiProtobufs.RequestResponse.Scheme scheme = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->scheme(), output);
  }

  // optional .MahimahiProtobufs.HTTPMessage request = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_request(), output);
  }

  // optional .MahimahiProtobufs.HTTPMessage response = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_response(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MahimahiProtobufs.RequestResponse)
}

::google::protobuf::uint8* RequestResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MahimahiProtobufs.RequestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MahimahiProtobufs.RequestResponse.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip(), target);
  }

  // optional uint32 port = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->port(), target);
  }

  // optional .MahimahiProtobufs.RequestResponse.Scheme scheme = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->scheme(), target);
  }

  // optional .MahimahiProtobufs.HTTPMessage request = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_request(), deterministic, target);
  }

  // optional .MahimahiProtobufs.HTTPMessage response = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_response(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MahimahiProtobufs.RequestResponse)
  return target;
}

size_t RequestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MahimahiProtobufs.RequestResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string ip = 1;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // optional .MahimahiProtobufs.HTTPMessage request = 4;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_);
    }

    // optional .MahimahiProtobufs.HTTPMessage response = 5;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_);
    }

    // optional uint32 port = 2;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->port());
    }

    // optional .MahimahiProtobufs.RequestResponse.Scheme scheme = 3;
    if (has_scheme()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->scheme());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MahimahiProtobufs.RequestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MahimahiProtobufs.RequestResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MahimahiProtobufs.RequestResponse)
    MergeFrom(*source);
  }
}

void RequestResponse::MergeFrom(const RequestResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MahimahiProtobufs.RequestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_request()->::MahimahiProtobufs::HTTPMessage::MergeFrom(from.request());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_response()->::MahimahiProtobufs::HTTPMessage::MergeFrom(from.response());
    }
    if (cached_has_bits & 0x00000008u) {
      port_ = from.port_;
    }
    if (cached_has_bits & 0x00000010u) {
      scheme_ = from.scheme_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RequestResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MahimahiProtobufs.RequestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestResponse::CopyFrom(const RequestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MahimahiProtobufs.RequestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestResponse::IsInitialized() const {
  return true;
}

void RequestResponse::Swap(RequestResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestResponse::InternalSwap(RequestResponse* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(request_, other->request_);
  swap(response_, other->response_);
  swap(port_, other->port_);
  swap(scheme_, other->scheme_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RequestResponse::GetMetadata() const {
  protobuf_http_5frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_http_5frecord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace MahimahiProtobufs
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MahimahiProtobufs::HTTPMessage* Arena::CreateMaybeMessage< ::MahimahiProtobufs::HTTPMessage >(Arena* arena) {
  return Arena::CreateInternal< ::MahimahiProtobufs::HTTPMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MahimahiProtobufs::HTTPHeader* Arena::CreateMaybeMessage< ::MahimahiProtobufs::HTTPHeader >(Arena* arena) {
  return Arena::CreateInternal< ::MahimahiProtobufs::HTTPHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MahimahiProtobufs::RequestResponse* Arena::CreateMaybeMessage< ::MahimahiProtobufs::RequestResponse >(Arena* arena) {
  return Arena::CreateInternal< ::MahimahiProtobufs::RequestResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
