// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: http_record.proto

#ifndef PROTOBUF_INCLUDED_http_5frecord_2eproto
#define PROTOBUF_INCLUDED_http_5frecord_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_http_5frecord_2eproto 

namespace protobuf_http_5frecord_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_http_5frecord_2eproto
namespace MahimahiProtobufs {
class HTTPHeader;
class HTTPHeaderDefaultTypeInternal;
extern HTTPHeaderDefaultTypeInternal _HTTPHeader_default_instance_;
class HTTPMessage;
class HTTPMessageDefaultTypeInternal;
extern HTTPMessageDefaultTypeInternal _HTTPMessage_default_instance_;
class RequestResponse;
class RequestResponseDefaultTypeInternal;
extern RequestResponseDefaultTypeInternal _RequestResponse_default_instance_;
}  // namespace MahimahiProtobufs
namespace google {
namespace protobuf {
template<> ::MahimahiProtobufs::HTTPHeader* Arena::CreateMaybeMessage<::MahimahiProtobufs::HTTPHeader>(Arena*);
template<> ::MahimahiProtobufs::HTTPMessage* Arena::CreateMaybeMessage<::MahimahiProtobufs::HTTPMessage>(Arena*);
template<> ::MahimahiProtobufs::RequestResponse* Arena::CreateMaybeMessage<::MahimahiProtobufs::RequestResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace MahimahiProtobufs {

enum RequestResponse_Scheme {
  RequestResponse_Scheme_HTTP = 1,
  RequestResponse_Scheme_HTTPS = 2
};
bool RequestResponse_Scheme_IsValid(int value);
const RequestResponse_Scheme RequestResponse_Scheme_Scheme_MIN = RequestResponse_Scheme_HTTP;
const RequestResponse_Scheme RequestResponse_Scheme_Scheme_MAX = RequestResponse_Scheme_HTTPS;
const int RequestResponse_Scheme_Scheme_ARRAYSIZE = RequestResponse_Scheme_Scheme_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestResponse_Scheme_descriptor();
inline const ::std::string& RequestResponse_Scheme_Name(RequestResponse_Scheme value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestResponse_Scheme_descriptor(), value);
}
inline bool RequestResponse_Scheme_Parse(
    const ::std::string& name, RequestResponse_Scheme* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestResponse_Scheme>(
    RequestResponse_Scheme_descriptor(), name, value);
}
// ===================================================================

class HTTPMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MahimahiProtobufs.HTTPMessage) */ {
 public:
  HTTPMessage();
  virtual ~HTTPMessage();

  HTTPMessage(const HTTPMessage& from);

  inline HTTPMessage& operator=(const HTTPMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HTTPMessage(HTTPMessage&& from) noexcept
    : HTTPMessage() {
    *this = ::std::move(from);
  }

  inline HTTPMessage& operator=(HTTPMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HTTPMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HTTPMessage* internal_default_instance() {
    return reinterpret_cast<const HTTPMessage*>(
               &_HTTPMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(HTTPMessage* other);
  friend void swap(HTTPMessage& a, HTTPMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HTTPMessage* New() const final {
    return CreateMaybeMessage<HTTPMessage>(NULL);
  }

  HTTPMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HTTPMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HTTPMessage& from);
  void MergeFrom(const HTTPMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HTTPMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MahimahiProtobufs.HTTPHeader header = 2;
  int header_size() const;
  void clear_header();
  static const int kHeaderFieldNumber = 2;
  ::MahimahiProtobufs::HTTPHeader* mutable_header(int index);
  ::google::protobuf::RepeatedPtrField< ::MahimahiProtobufs::HTTPHeader >*
      mutable_header();
  const ::MahimahiProtobufs::HTTPHeader& header(int index) const;
  ::MahimahiProtobufs::HTTPHeader* add_header();
  const ::google::protobuf::RepeatedPtrField< ::MahimahiProtobufs::HTTPHeader >&
      header() const;

  // optional bytes first_line = 1;
  bool has_first_line() const;
  void clear_first_line();
  static const int kFirstLineFieldNumber = 1;
  const ::std::string& first_line() const;
  void set_first_line(const ::std::string& value);
  #if LANG_CXX11
  void set_first_line(::std::string&& value);
  #endif
  void set_first_line(const char* value);
  void set_first_line(const void* value, size_t size);
  ::std::string* mutable_first_line();
  ::std::string* release_first_line();
  void set_allocated_first_line(::std::string* first_line);

  // optional bytes body = 3;
  bool has_body() const;
  void clear_body();
  static const int kBodyFieldNumber = 3;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  #if LANG_CXX11
  void set_body(::std::string&& value);
  #endif
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // @@protoc_insertion_point(class_scope:MahimahiProtobufs.HTTPMessage)
 private:
  void set_has_first_line();
  void clear_has_first_line();
  void set_has_body();
  void clear_has_body();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MahimahiProtobufs::HTTPHeader > header_;
  ::google::protobuf::internal::ArenaStringPtr first_line_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  friend struct ::protobuf_http_5frecord_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HTTPHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MahimahiProtobufs.HTTPHeader) */ {
 public:
  HTTPHeader();
  virtual ~HTTPHeader();

  HTTPHeader(const HTTPHeader& from);

  inline HTTPHeader& operator=(const HTTPHeader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HTTPHeader(HTTPHeader&& from) noexcept
    : HTTPHeader() {
    *this = ::std::move(from);
  }

  inline HTTPHeader& operator=(HTTPHeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HTTPHeader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HTTPHeader* internal_default_instance() {
    return reinterpret_cast<const HTTPHeader*>(
               &_HTTPHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(HTTPHeader* other);
  friend void swap(HTTPHeader& a, HTTPHeader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HTTPHeader* New() const final {
    return CreateMaybeMessage<HTTPHeader>(NULL);
  }

  HTTPHeader* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HTTPHeader>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HTTPHeader& from);
  void MergeFrom(const HTTPHeader& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HTTPHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional bytes value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:MahimahiProtobufs.HTTPHeader)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct ::protobuf_http_5frecord_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RequestResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MahimahiProtobufs.RequestResponse) */ {
 public:
  RequestResponse();
  virtual ~RequestResponse();

  RequestResponse(const RequestResponse& from);

  inline RequestResponse& operator=(const RequestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestResponse(RequestResponse&& from) noexcept
    : RequestResponse() {
    *this = ::std::move(from);
  }

  inline RequestResponse& operator=(RequestResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestResponse* internal_default_instance() {
    return reinterpret_cast<const RequestResponse*>(
               &_RequestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(RequestResponse* other);
  friend void swap(RequestResponse& a, RequestResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestResponse* New() const final {
    return CreateMaybeMessage<RequestResponse>(NULL);
  }

  RequestResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RequestResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RequestResponse& from);
  void MergeFrom(const RequestResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RequestResponse_Scheme Scheme;
  static const Scheme HTTP =
    RequestResponse_Scheme_HTTP;
  static const Scheme HTTPS =
    RequestResponse_Scheme_HTTPS;
  static inline bool Scheme_IsValid(int value) {
    return RequestResponse_Scheme_IsValid(value);
  }
  static const Scheme Scheme_MIN =
    RequestResponse_Scheme_Scheme_MIN;
  static const Scheme Scheme_MAX =
    RequestResponse_Scheme_Scheme_MAX;
  static const int Scheme_ARRAYSIZE =
    RequestResponse_Scheme_Scheme_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Scheme_descriptor() {
    return RequestResponse_Scheme_descriptor();
  }
  static inline const ::std::string& Scheme_Name(Scheme value) {
    return RequestResponse_Scheme_Name(value);
  }
  static inline bool Scheme_Parse(const ::std::string& name,
      Scheme* value) {
    return RequestResponse_Scheme_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string ip = 1;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional .MahimahiProtobufs.HTTPMessage request = 4;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 4;
  private:
  const ::MahimahiProtobufs::HTTPMessage& _internal_request() const;
  public:
  const ::MahimahiProtobufs::HTTPMessage& request() const;
  ::MahimahiProtobufs::HTTPMessage* release_request();
  ::MahimahiProtobufs::HTTPMessage* mutable_request();
  void set_allocated_request(::MahimahiProtobufs::HTTPMessage* request);

  // optional .MahimahiProtobufs.HTTPMessage response = 5;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 5;
  private:
  const ::MahimahiProtobufs::HTTPMessage& _internal_response() const;
  public:
  const ::MahimahiProtobufs::HTTPMessage& response() const;
  ::MahimahiProtobufs::HTTPMessage* release_response();
  ::MahimahiProtobufs::HTTPMessage* mutable_response();
  void set_allocated_response(::MahimahiProtobufs::HTTPMessage* response);

  // optional uint32 port = 2;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // optional .MahimahiProtobufs.RequestResponse.Scheme scheme = 3;
  bool has_scheme() const;
  void clear_scheme();
  static const int kSchemeFieldNumber = 3;
  ::MahimahiProtobufs::RequestResponse_Scheme scheme() const;
  void set_scheme(::MahimahiProtobufs::RequestResponse_Scheme value);

  // @@protoc_insertion_point(class_scope:MahimahiProtobufs.RequestResponse)
 private:
  void set_has_ip();
  void clear_has_ip();
  void set_has_port();
  void clear_has_port();
  void set_has_scheme();
  void clear_has_scheme();
  void set_has_request();
  void clear_has_request();
  void set_has_response();
  void clear_has_response();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::MahimahiProtobufs::HTTPMessage* request_;
  ::MahimahiProtobufs::HTTPMessage* response_;
  ::google::protobuf::uint32 port_;
  int scheme_;
  friend struct ::protobuf_http_5frecord_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HTTPMessage

// optional bytes first_line = 1;
inline bool HTTPMessage::has_first_line() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HTTPMessage::set_has_first_line() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HTTPMessage::clear_has_first_line() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HTTPMessage::clear_first_line() {
  first_line_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_first_line();
}
inline const ::std::string& HTTPMessage::first_line() const {
  // @@protoc_insertion_point(field_get:MahimahiProtobufs.HTTPMessage.first_line)
  return first_line_.GetNoArena();
}
inline void HTTPMessage::set_first_line(const ::std::string& value) {
  set_has_first_line();
  first_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MahimahiProtobufs.HTTPMessage.first_line)
}
#if LANG_CXX11
inline void HTTPMessage::set_first_line(::std::string&& value) {
  set_has_first_line();
  first_line_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MahimahiProtobufs.HTTPMessage.first_line)
}
#endif
inline void HTTPMessage::set_first_line(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_first_line();
  first_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MahimahiProtobufs.HTTPMessage.first_line)
}
inline void HTTPMessage::set_first_line(const void* value, size_t size) {
  set_has_first_line();
  first_line_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MahimahiProtobufs.HTTPMessage.first_line)
}
inline ::std::string* HTTPMessage::mutable_first_line() {
  set_has_first_line();
  // @@protoc_insertion_point(field_mutable:MahimahiProtobufs.HTTPMessage.first_line)
  return first_line_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HTTPMessage::release_first_line() {
  // @@protoc_insertion_point(field_release:MahimahiProtobufs.HTTPMessage.first_line)
  if (!has_first_line()) {
    return NULL;
  }
  clear_has_first_line();
  return first_line_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HTTPMessage::set_allocated_first_line(::std::string* first_line) {
  if (first_line != NULL) {
    set_has_first_line();
  } else {
    clear_has_first_line();
  }
  first_line_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), first_line);
  // @@protoc_insertion_point(field_set_allocated:MahimahiProtobufs.HTTPMessage.first_line)
}

// repeated .MahimahiProtobufs.HTTPHeader header = 2;
inline int HTTPMessage::header_size() const {
  return header_.size();
}
inline void HTTPMessage::clear_header() {
  header_.Clear();
}
inline ::MahimahiProtobufs::HTTPHeader* HTTPMessage::mutable_header(int index) {
  // @@protoc_insertion_point(field_mutable:MahimahiProtobufs.HTTPMessage.header)
  return header_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::MahimahiProtobufs::HTTPHeader >*
HTTPMessage::mutable_header() {
  // @@protoc_insertion_point(field_mutable_list:MahimahiProtobufs.HTTPMessage.header)
  return &header_;
}
inline const ::MahimahiProtobufs::HTTPHeader& HTTPMessage::header(int index) const {
  // @@protoc_insertion_point(field_get:MahimahiProtobufs.HTTPMessage.header)
  return header_.Get(index);
}
inline ::MahimahiProtobufs::HTTPHeader* HTTPMessage::add_header() {
  // @@protoc_insertion_point(field_add:MahimahiProtobufs.HTTPMessage.header)
  return header_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MahimahiProtobufs::HTTPHeader >&
HTTPMessage::header() const {
  // @@protoc_insertion_point(field_list:MahimahiProtobufs.HTTPMessage.header)
  return header_;
}

// optional bytes body = 3;
inline bool HTTPMessage::has_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HTTPMessage::set_has_body() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HTTPMessage::clear_has_body() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HTTPMessage::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
}
inline const ::std::string& HTTPMessage::body() const {
  // @@protoc_insertion_point(field_get:MahimahiProtobufs.HTTPMessage.body)
  return body_.GetNoArena();
}
inline void HTTPMessage::set_body(const ::std::string& value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MahimahiProtobufs.HTTPMessage.body)
}
#if LANG_CXX11
inline void HTTPMessage::set_body(::std::string&& value) {
  set_has_body();
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MahimahiProtobufs.HTTPMessage.body)
}
#endif
inline void HTTPMessage::set_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MahimahiProtobufs.HTTPMessage.body)
}
inline void HTTPMessage::set_body(const void* value, size_t size) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MahimahiProtobufs.HTTPMessage.body)
}
inline ::std::string* HTTPMessage::mutable_body() {
  set_has_body();
  // @@protoc_insertion_point(field_mutable:MahimahiProtobufs.HTTPMessage.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HTTPMessage::release_body() {
  // @@protoc_insertion_point(field_release:MahimahiProtobufs.HTTPMessage.body)
  if (!has_body()) {
    return NULL;
  }
  clear_has_body();
  return body_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HTTPMessage::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    set_has_body();
  } else {
    clear_has_body();
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:MahimahiProtobufs.HTTPMessage.body)
}

// -------------------------------------------------------------------

// HTTPHeader

// optional bytes key = 1;
inline bool HTTPHeader::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HTTPHeader::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HTTPHeader::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HTTPHeader::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& HTTPHeader::key() const {
  // @@protoc_insertion_point(field_get:MahimahiProtobufs.HTTPHeader.key)
  return key_.GetNoArena();
}
inline void HTTPHeader::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MahimahiProtobufs.HTTPHeader.key)
}
#if LANG_CXX11
inline void HTTPHeader::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MahimahiProtobufs.HTTPHeader.key)
}
#endif
inline void HTTPHeader::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MahimahiProtobufs.HTTPHeader.key)
}
inline void HTTPHeader::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MahimahiProtobufs.HTTPHeader.key)
}
inline ::std::string* HTTPHeader::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:MahimahiProtobufs.HTTPHeader.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HTTPHeader::release_key() {
  // @@protoc_insertion_point(field_release:MahimahiProtobufs.HTTPHeader.key)
  if (!has_key()) {
    return NULL;
  }
  clear_has_key();
  return key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HTTPHeader::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:MahimahiProtobufs.HTTPHeader.key)
}

// optional bytes value = 2;
inline bool HTTPHeader::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HTTPHeader::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HTTPHeader::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HTTPHeader::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& HTTPHeader::value() const {
  // @@protoc_insertion_point(field_get:MahimahiProtobufs.HTTPHeader.value)
  return value_.GetNoArena();
}
inline void HTTPHeader::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MahimahiProtobufs.HTTPHeader.value)
}
#if LANG_CXX11
inline void HTTPHeader::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MahimahiProtobufs.HTTPHeader.value)
}
#endif
inline void HTTPHeader::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MahimahiProtobufs.HTTPHeader.value)
}
inline void HTTPHeader::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MahimahiProtobufs.HTTPHeader.value)
}
inline ::std::string* HTTPHeader::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:MahimahiProtobufs.HTTPHeader.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HTTPHeader::release_value() {
  // @@protoc_insertion_point(field_release:MahimahiProtobufs.HTTPHeader.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HTTPHeader::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:MahimahiProtobufs.HTTPHeader.value)
}

// -------------------------------------------------------------------

// RequestResponse

// optional string ip = 1;
inline bool RequestResponse::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestResponse::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestResponse::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestResponse::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& RequestResponse::ip() const {
  // @@protoc_insertion_point(field_get:MahimahiProtobufs.RequestResponse.ip)
  return ip_.GetNoArena();
}
inline void RequestResponse::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MahimahiProtobufs.RequestResponse.ip)
}
#if LANG_CXX11
inline void RequestResponse::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MahimahiProtobufs.RequestResponse.ip)
}
#endif
inline void RequestResponse::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MahimahiProtobufs.RequestResponse.ip)
}
inline void RequestResponse::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MahimahiProtobufs.RequestResponse.ip)
}
inline ::std::string* RequestResponse::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:MahimahiProtobufs.RequestResponse.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestResponse::release_ip() {
  // @@protoc_insertion_point(field_release:MahimahiProtobufs.RequestResponse.ip)
  if (!has_ip()) {
    return NULL;
  }
  clear_has_ip();
  return ip_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestResponse::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:MahimahiProtobufs.RequestResponse.ip)
}

// optional uint32 port = 2;
inline bool RequestResponse::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestResponse::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestResponse::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestResponse::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 RequestResponse::port() const {
  // @@protoc_insertion_point(field_get:MahimahiProtobufs.RequestResponse.port)
  return port_;
}
inline void RequestResponse::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:MahimahiProtobufs.RequestResponse.port)
}

// optional .MahimahiProtobufs.RequestResponse.Scheme scheme = 3;
inline bool RequestResponse::has_scheme() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestResponse::set_has_scheme() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestResponse::clear_has_scheme() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestResponse::clear_scheme() {
  scheme_ = 1;
  clear_has_scheme();
}
inline ::MahimahiProtobufs::RequestResponse_Scheme RequestResponse::scheme() const {
  // @@protoc_insertion_point(field_get:MahimahiProtobufs.RequestResponse.scheme)
  return static_cast< ::MahimahiProtobufs::RequestResponse_Scheme >(scheme_);
}
inline void RequestResponse::set_scheme(::MahimahiProtobufs::RequestResponse_Scheme value) {
  assert(::MahimahiProtobufs::RequestResponse_Scheme_IsValid(value));
  set_has_scheme();
  scheme_ = value;
  // @@protoc_insertion_point(field_set:MahimahiProtobufs.RequestResponse.scheme)
}

// optional .MahimahiProtobufs.HTTPMessage request = 4;
inline bool RequestResponse::has_request() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestResponse::set_has_request() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestResponse::clear_has_request() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestResponse::clear_request() {
  if (request_ != NULL) request_->Clear();
  clear_has_request();
}
inline const ::MahimahiProtobufs::HTTPMessage& RequestResponse::_internal_request() const {
  return *request_;
}
inline const ::MahimahiProtobufs::HTTPMessage& RequestResponse::request() const {
  const ::MahimahiProtobufs::HTTPMessage* p = request_;
  // @@protoc_insertion_point(field_get:MahimahiProtobufs.RequestResponse.request)
  return p != NULL ? *p : *reinterpret_cast<const ::MahimahiProtobufs::HTTPMessage*>(
      &::MahimahiProtobufs::_HTTPMessage_default_instance_);
}
inline ::MahimahiProtobufs::HTTPMessage* RequestResponse::release_request() {
  // @@protoc_insertion_point(field_release:MahimahiProtobufs.RequestResponse.request)
  clear_has_request();
  ::MahimahiProtobufs::HTTPMessage* temp = request_;
  request_ = NULL;
  return temp;
}
inline ::MahimahiProtobufs::HTTPMessage* RequestResponse::mutable_request() {
  set_has_request();
  if (request_ == NULL) {
    auto* p = CreateMaybeMessage<::MahimahiProtobufs::HTTPMessage>(GetArenaNoVirtual());
    request_ = p;
  }
  // @@protoc_insertion_point(field_mutable:MahimahiProtobufs.RequestResponse.request)
  return request_;
}
inline void RequestResponse::set_allocated_request(::MahimahiProtobufs::HTTPMessage* request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete request_;
  }
  if (request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    set_has_request();
  } else {
    clear_has_request();
  }
  request_ = request;
  // @@protoc_insertion_point(field_set_allocated:MahimahiProtobufs.RequestResponse.request)
}

// optional .MahimahiProtobufs.HTTPMessage response = 5;
inline bool RequestResponse::has_response() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestResponse::set_has_response() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestResponse::clear_response() {
  if (response_ != NULL) response_->Clear();
  clear_has_response();
}
inline const ::MahimahiProtobufs::HTTPMessage& RequestResponse::_internal_response() const {
  return *response_;
}
inline const ::MahimahiProtobufs::HTTPMessage& RequestResponse::response() const {
  const ::MahimahiProtobufs::HTTPMessage* p = response_;
  // @@protoc_insertion_point(field_get:MahimahiProtobufs.RequestResponse.response)
  return p != NULL ? *p : *reinterpret_cast<const ::MahimahiProtobufs::HTTPMessage*>(
      &::MahimahiProtobufs::_HTTPMessage_default_instance_);
}
inline ::MahimahiProtobufs::HTTPMessage* RequestResponse::release_response() {
  // @@protoc_insertion_point(field_release:MahimahiProtobufs.RequestResponse.response)
  clear_has_response();
  ::MahimahiProtobufs::HTTPMessage* temp = response_;
  response_ = NULL;
  return temp;
}
inline ::MahimahiProtobufs::HTTPMessage* RequestResponse::mutable_response() {
  set_has_response();
  if (response_ == NULL) {
    auto* p = CreateMaybeMessage<::MahimahiProtobufs::HTTPMessage>(GetArenaNoVirtual());
    response_ = p;
  }
  // @@protoc_insertion_point(field_mutable:MahimahiProtobufs.RequestResponse.response)
  return response_;
}
inline void RequestResponse::set_allocated_response(::MahimahiProtobufs::HTTPMessage* response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete response_;
  }
  if (response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, response, submessage_arena);
    }
    set_has_response();
  } else {
    clear_has_response();
  }
  response_ = response;
  // @@protoc_insertion_point(field_set_allocated:MahimahiProtobufs.RequestResponse.response)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace MahimahiProtobufs

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MahimahiProtobufs::RequestResponse_Scheme> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MahimahiProtobufs::RequestResponse_Scheme>() {
  return ::MahimahiProtobufs::RequestResponse_Scheme_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_http_5frecord_2eproto
